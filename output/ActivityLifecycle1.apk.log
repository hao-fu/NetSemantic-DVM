main - [DEBUG]: C:/Users/hao/workspace/TRUST/sootOutput/ActivityLifecycle1.apk_dummy.csv
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: apk java.util.zip.ZipFile@238c1333 C:/Users/hao/workspace/DroidBenchProj/Lifecycle_ActivityLifecycle1/app/ActivityLifecycle1.apk
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: class de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[1]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<INVOKE,DIRECT,extra=[de.ecspride.ActivityLifecycle1/connect[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<RETURN,VOID>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,EXCETPION,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<GOTO,extra=index:3>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: new chain obj
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q=">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<STATIC,SPUT,r0=r0,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 3 7
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 0 <SPECIAL,ARGUMENT_SET,extra=[]> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 2
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 1 <MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q="> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: Mov const begin <MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q=">
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data: http://www.google.de/search?q= class java.lang.String
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 11 53
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 2 <STATIC,SPUT,r0=r0,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expect sput URL from de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.Interpreter - [DEBUG]: real sput http://www.google.de/search?q= from fu.hao.trust.dvm.DVMClass@71ebfc42
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 2 3
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 3 <RETURN,VOID> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter$OP_RETURN_VOID - [DEBUG]: return void
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: pc 0 0
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DVMObject - [DEBUG]: New instance of de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 15 12
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 1 <HALT,SUPER,extra=[null, [1]]> at de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: cannot resolve the invocation
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <HALT,SUPER,extra=[null, [1]]>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 11
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 2 <INVOKE,DIRECT,extra=[de.ecspride.ActivityLifecycle1/connect[], [1]]> at de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: null
class fu.hao.trust.dvm.Interpreter - [DEBUG]: not a reflction invocation de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 2 3
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 3 <RETURN,VOID> at de.ecspride.ActivityLifecycle1/onStart[]
class fu.hao.trust.dvm.Interpreter$OP_RETURN_VOID - [DEBUG]: return void
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN DONE! The last one is onStart
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: class de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[3, 4]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [3, 4]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [3, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,CONST,dst=r2,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [3, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<ARITHMETIC,CHECK-AND-CAST,dst=r1,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<STATIC,SGET,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<INVOKE,VIRTUAL,extra=[java.lang.String/concat[java.lang.String], [2, 0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<MOV,RESULT,dst=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<STATIC,SPUT,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 3 7
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 0 <SPECIAL,ARGUMENT_SET,extra=[3, 4]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: args: fu.hao.trust.dvm.DVMObject@3bfe8b7c
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.os.Bundle at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for android.os.Bundle at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.os.Bundle at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DVMObject - [DEBUG]: New instance of android.os.Bundle
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.os.Bundle at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.os.Bundle at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: args: fu.hao.trust.dvm.DVMObject@119e7a4b
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 15 12
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 1 <HALT,SUPER,extra=[null, [3, 4]]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: cannot resolve the invocation
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <HALT,SUPER,extra=[null, [3, 4]]>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 2
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 2 <MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: Mov const begin <MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data: 2130903040 class patdroid.core.PrimitiveInfo
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 13
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 3 <INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [3, 2]]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: fu.hao.trust.dvm.DVMObject@3bfe8b7c
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reflction class: class android.app.Activity
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expected para type: int
class fu.hao.trust.dvm.Interpreter - [DEBUG]: real para int
class fu.hao.trust.dvm.Interpreter - [DEBUG]: caller obj: android.app.Activity@3b6edaf6, from class: class android.app.Activity
class fu.hao.trust.dvm.Interpreter - [MSG]: reflction invocation public void android.app.Activity.setContentView(int)
class fu.hao.trust.analysis.Taint - [DEBUG]: <android.app.Activity: void setContentView(int)>
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint call: <android.app.Activity: void setContentView(int)>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 2
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 4 <MOV,CONST,dst=r2,type=java.lang.String,extra="phone"> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: Mov const begin <MOV,CONST,dst=r2,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data: phone class java.lang.String
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 13
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 5 <INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [3, 2]]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: fu.hao.trust.dvm.DVMObject@3bfe8b7c
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reflction class: class android.app.Activity
class fu.hao.trust.dvm.Interpreter - [DEBUG]: caller obj: android.app.Activity@6ae96af5, from class: class android.app.Activity
class fu.hao.trust.dvm.Interpreter - [DEBUG]: return data: android.telephony.TelephonyManager@26d31a9 ,class android.telephony.TelephonyManager
class fu.hao.trust.dvm.Interpreter - [MSG]: reflction invocation public java.lang.Object android.app.Activity.getSystemService(java.lang.String)
class fu.hao.trust.analysis.Taint - [DEBUG]: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint call: <android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 21
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 6 <MOV,RESULT,dst=r1,type=java.lang.Object> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data android.telephony.TelephonyManager@26d31a9 android.telephony.TelephonyManager reg 1
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 13 18
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 7 <ARITHMETIC,CHECK-AND-CAST,dst=r1,type=android.telephony.TelephonyManager> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <ARITHMETIC,CHECK-AND-CAST,dst=r1,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 13
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 8 <INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [1]]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: android.telephony.TelephonyManager@26d31a9
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reflction class: class android.telephony.TelephonyManager
class fu.hao.trust.dvm.Interpreter - [DEBUG]: return data: 359874043116909 ,class java.lang.String
class fu.hao.trust.dvm.Interpreter - [MSG]: reflction invocation public java.lang.String android.telephony.TelephonyManager.getDeviceId()
class fu.hao.trust.analysis.Taint - [DEBUG]: <android.telephony.TelephonyManager: java.lang.String getDeviceId()>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [359874043116909, reg -1]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 21
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 9 <MOV,RESULT,dst=r0,type=java.lang.Object> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data 359874043116909 java.lang.String reg 0
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [359874043116909, reg 0, reg -1]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 11 52
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 10 <STATIC,SGET,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: sget http://www.google.de/search?q=, from fu.hao.trust.dvm.DVMClass@71ebfc42
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expect sget URL, a java.lang.String from de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [359874043116909, reg -1, reg 0]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 13
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 11 <INVOKE,VIRTUAL,extra=[java.lang.String/concat[java.lang.String], [2, 0]]> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: http://www.google.de/search?q=
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reflction class: class java.lang.String
class fu.hao.trust.dvm.Interpreter - [DEBUG]: caller obj: http://www.google.de/search?q=, from class: class java.lang.String
class fu.hao.trust.dvm.Interpreter - [DEBUG]: return data: http://www.google.de/search?q=359874043116909 ,class java.lang.String
class fu.hao.trust.dvm.Interpreter - [MSG]: reflction invocation public java.lang.String java.lang.String.concat(java.lang.String)
class fu.hao.trust.analysis.Taint - [DEBUG]: <java.lang.String: java.lang.String concat(java.lang.String)>
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint call: <java.lang.String: java.lang.String concat(java.lang.String)>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [http://www.google.de/search?q=359874043116909, 359874043116909, reg 0, reg -1]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 21
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 12 <MOV,RESULT,dst=r2,type=java.lang.Object> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data http://www.google.de/search?q=359874043116909 java.lang.String reg 2
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [http://www.google.de/search?q=359874043116909, 359874043116909, reg -1, reg 0, reg 2]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 11 53
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 13 <STATIC,SPUT,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expect sput URL from de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.Interpreter - [DEBUG]: real sput http://www.google.de/search?q=359874043116909 from fu.hao.trust.dvm.DVMClass@71ebfc42
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@7b17a8df
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [http://www.google.de/search?q=359874043116909, 359874043116909, reg 0, reg -1, reg 2]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 2 3
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 14 <RETURN,VOID> at de.ecspride.ActivityLifecycle1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.Interpreter$OP_RETURN_VOID - [DEBUG]: return void
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: [http://www.google.de/search?q=359874043116909, 359874043116909, reg -1, reg 0, reg 2]
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN DONE! The last one is onCreate
main - [DEBUG]: C:/Users/hao/workspace/TRUST/sootOutput/ActivityLifecycle1.apk.csv
main - [DEBUG]: de.ecspride.ActivityLifecycle1
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run connect at C:/Users/hao/workspace/DroidBenchProj/Lifecycle_ActivityLifecycle1/app/ActivityLifecycle1.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[3]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<NEW,INSTANCE,dst=r1,type=java.net.URL>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<STATIC,SGET,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,DIRECT,extra=[java.net.URL/<init>[java.lang.String], [1, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[java.net.URL/openConnection[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<ARITHMETIC,CHECK-AND-CAST,dst=r0,type=java.net.HttpURLConnection>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,CONST,dst=r2,type=java.lang.String,extra="GET">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[java.net.HttpURLConnection/setRequestMethod[java.lang.String], [0, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INVOKE,VIRTUAL,extra=[java.net.URLConnection/setDoInput[boolean], [0, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<INVOKE,VIRTUAL,extra=[java.net.URLConnection/connect[], [0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.Interpreter - [MSG]: RUN BEGIN
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 3 7
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 0 <SPECIAL,ARGUMENT_SET,extra=[3]> at de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: args: fu.hao.trust.dvm.DVMObject@3bfe8b7c
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 4 8
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 1 <NEW,INSTANCE,dst=r1,type=java.net.URL> at de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reg 1
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 11 52
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 2 <STATIC,SGET,r0=r2,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)> at de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q=">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<STATIC,SPUT,r0=r0,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 3 7
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 0 <SPECIAL,ARGUMENT_SET,extra=[]> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 1 2
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 1 <MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q="> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: Mov const begin <MOV,CONST,dst=r0,type=java.lang.String,extra="http://www.google.de/search?q=">
class fu.hao.trust.dvm.Interpreter - [DEBUG]: data: http://www.google.de/search?q= class java.lang.String
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 11 53
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 2 <STATIC,SPUT,r0=r0,type=java.lang.Object,extra=(de.ecspride.ActivityLifecycle1, URL)> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expect sput URL from de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.Interpreter - [DEBUG]: real sput http://www.google.de/search?q= from fu.hao.trust.dvm.DVMClass@7a73ad16
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 2 3
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 3 <RETURN,VOID> at de.ecspride.ActivityLifecycle1/<clinit>[]
class fu.hao.trust.dvm.Interpreter$OP_RETURN_VOID - [DEBUG]: return void
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: pc 2 2
class fu.hao.trust.analysis.Taint - [DEBUG]: not a taint op <RETURN,VOID>
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: new class representation for java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass java.lang.Object at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass android.app.Activity at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.Interpreter - [DEBUG]: sget http://www.google.de/search?q=, from fu.hao.trust.dvm.DVMClass@7a73ad16
class fu.hao.trust.dvm.Interpreter - [DEBUG]: expect sget URL, a java.lang.String from de.ecspride.ActivityLifecycle1
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: getClass de.ecspride.ActivityLifecycle1 at fu.hao.trust.dvm.DalvikVM$Heap@14bae683
class fu.hao.trust.dvm.Interpreter - [DEBUG]: tainted set: []
class fu.hao.trust.dvm.Interpreter - [DEBUG]: opcode: 12 13
class fu.hao.trust.dvm.Interpreter - [DEBUG]: 4 <INVOKE,VIRTUAL,extra=[java.net.URL/openConnection[], [1]]> at de.ecspride.ActivityLifecycle1/connect[]
class fu.hao.trust.dvm.Interpreter - [DEBUG]: null
class fu.hao.trust.dvm.Interpreter - [DEBUG]: reflction class: class java.net.URL
main - [DEBUG]: VirtualDispatch1.apk
main - [DEBUG]: C:/Users/hao/workspace/TRUST/sootOutput/VirtualDispatch1.apk_dummy.csv
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: apk java.util.zip.ZipFile@44a04f1b C:/Users/hao/workspace/DroidBenchProj/GeneralJava_VirtualDispatch1/app/VirtualDispatch1.apk
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: class de.ecspride.VirtualDispatch1
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.VirtualDispatch1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.VirtualDispatch1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[2, 3]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [2, 3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [2, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [2, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<ARITHMETIC,CHECK-AND-CAST,dst=r0,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INSTANCE,IPUT,r0=r2,r1=r1,type=java.lang.Object,extra=de.ecspride.VirtualDispatch1.imei>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<RETURN,VOID>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: class de.ecspride.VirtualDispatch1
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.VirtualDispatch1/clickButton[android.view.View]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.VirtualDispatch1/clickButton[android.view.View]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[2, 3]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<INSTANCE,IGET,r0=r2,r1=r1,type=void,extra=de.ecspride.VirtualDispatch1.counter>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<ARITHMETIC,ADD,dst=r1,r0=r1,extra=class patdroid.core.PrimitiveInfo?1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INSTANCE,IPUT,r0=r2,r1=r1,type=void,extra=de.ecspride.VirtualDispatch1.counter>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,CONST,dst=r0,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INSTANCE,IGET,r0=r2,r1=r1,type=void,extra=de.ecspride.VirtualDispatch1.counter>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<ARITHMETIC,REM,dst=r1,r0=r1,extra=class patdroid.core.PrimitiveInfo?2>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<IF,NEZ,r0=r1,extra=index:13>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<NEW,INSTANCE,dst=r0,type=de.ecspride.NoDataLeak>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,CONST,dst=r1,type=java.lang.String,extra="no leak">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INVOKE,DIRECT,extra=[de.ecspride.NoDataLeak/<init>[java.lang.String], [0, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<INVOKE,VIRTUAL,extra=[de.ecspride.NoDataLeak/logData[], [0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<RETURN,VOID>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<NEW,INSTANCE,dst=r0,type=de.ecspride.DataLeak>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<INSTANCE,IGET,r0=r2,r1=r1,type=java.lang.Object,extra=de.ecspride.VirtualDispatch1.imei>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<INVOKE,DIRECT,extra=[de.ecspride.DataLeak/<init>[java.lang.String], [0, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<GOTO,extra=index:11>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/GeneralJava_SourceCodeSpecific1/app/app-debug.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.MainActivity/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.MainActivity/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[6, 7]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [6, 7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r5,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [6, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,CONST,dst=r5,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [6, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<MOV,RESULT,dst=r4,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<ARITHMETIC,CHECK-AND-CAST,dst=r4,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<NEW,INSTANCE,dst=r3,type=java.util.HashSet>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<INVOKE,DIRECT,extra=[java.util.HashSet/<init>[], [3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49 123456">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<INVOKE,INTERFACE,extra=[java.util.Set/add[java.lang.Object], [3, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49 654321">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<INVOKE,INTERFACE,extra=[java.util.Set/add[java.lang.Object], [3, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49 111111">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<INVOKE,INTERFACE,extra=[java.util.Set/add[java.lang.Object], [3, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49 222222">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<INVOKE,INTERFACE,extra=[java.util.Set/add[java.lang.Object], [3, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49 333333">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<INVOKE,INTERFACE,extra=[java.util.Set/add[java.lang.Object], [3, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,CONST,dst=r0,type=void,extra=class patdroid.core.PrimitiveInfo?33>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<ARITHMETIC,ADD,dst=r1,r0=r0,extra=class patdroid.core.PrimitiveInfo?43>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<IF,NE,r0=r0,r1=r1,extra=index:26>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<MOV,CONST,dst=r2,type=java.lang.String,extra="no taint">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<INVOKE,DIRECT,extra=[de.ecspride.MainActivity/sendSMS[java.util.Set, java.lang.String], [6, 3, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [25]<RETURN,VOID>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [26]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [4]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [27]<MOV,RESULT,dst=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [28]<GOTO,extra=index:24>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/GeneralJava_Loop1/app/app-debug.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.LoopExample1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.LoopExample1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[12, 13]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [12, 13]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [12, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [12, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,RESULT,dst=r11,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<ARITHMETIC,CHECK-AND-CAST,dst=r11,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [11]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<MOV,RESULT,dst=r9,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<MOV,CONST,dst=r3,type=java.lang.String,extra="">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<INVOKE,VIRTUAL,extra=[java.lang.String/toCharArray[], [9]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<MOV,RESULT,dst=r6,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<ARITHMETIC,ARRAY_LENGTH,dst=r10,r0=r6,type=int>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<MOV,CONST,dst=r8,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<IF,GE,r0=r8,r1=r10,extra=index:31>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<ARRAY,AGET,dst=r7,r0=r6,r1=r8,type=char>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<NEW,INSTANCE,dst=r1,type=java.lang.StringBuilder>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<INVOKE,DIRECT,extra=[java.lang.StringBuilder/<init>[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[java.lang.String], [1, 3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[char], [1, 7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<MOV,CONST,dst=r4,type=java.lang.String,extra="_">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [25]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[java.lang.String], [1, 4]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [26]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [27]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/toString[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [28]<MOV,RESULT,dst=r3,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [29]<ARITHMETIC,ADD,dst=r8,r0=r8,extra=class patdroid.core.PrimitiveInfo?1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [30]<GOTO,extra=index:16>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [31]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [32]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [33]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [34]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [35]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [36]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [37]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/GeneralJava_Loop2/app/app-debug.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.LoopExample2/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.LoopExample2/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[13, 14]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [13, 14]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [13, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [13, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,RESULT,dst=r12,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<ARITHMETIC,CHECK-AND-CAST,dst=r12,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [12]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<MOV,RESULT,dst=r10,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<MOV,CONST,dst=r3,type=java.lang.String,extra="">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<MOV,CONST,dst=r8,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?10>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<IF,GE,r0=r8,r1=r1,extra=index:38>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?9>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<IF,NE,r0=r8,r1=r1,extra=index:36>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<INVOKE,VIRTUAL,extra=[java.lang.String/toCharArray[], [10]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<MOV,RESULT,dst=r6,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<ARITHMETIC,ARRAY_LENGTH,dst=r11,r0=r6,type=int>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,CONST,dst=r9,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<IF,GE,r0=r9,r1=r11,extra=index:36>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<ARRAY,AGET,dst=r7,r0=r6,r1=r9,type=char>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<NEW,INSTANCE,dst=r1,type=java.lang.StringBuilder>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<INVOKE,DIRECT,extra=[java.lang.StringBuilder/<init>[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [25]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[java.lang.String], [1, 3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [26]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [27]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[char], [1, 7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [28]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [29]<MOV,CONST,dst=r4,type=java.lang.String,extra="_">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [30]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/append[java.lang.String], [1, 4]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [31]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [32]<INVOKE,VIRTUAL,extra=[java.lang.StringBuilder/toString[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [33]<MOV,RESULT,dst=r3,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [34]<ARITHMETIC,ADD,dst=r9,r0=r9,extra=class patdroid.core.PrimitiveInfo?1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [35]<GOTO,extra=index:21>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [36]<ARITHMETIC,ADD,dst=r8,r0=r8,extra=class patdroid.core.PrimitiveInfo?1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [37]<GOTO,extra=index:13>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [38]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [39]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [40]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [41]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [42]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [43]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [44]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/GeneralJava_UnreachableCode/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.UnreachableCode/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.UnreachableCode/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[1, 2]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [1, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r0,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [1, 0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_ObjectSensitivity1/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.ObjectSensitivity1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.ObjectSensitivity1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[9, 10]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [9, 10]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [9, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<NEW,INSTANCE,dst=r6,type=java.util.LinkedList>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,DIRECT,extra=[java.util.LinkedList/<init>[], [6]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<NEW,INSTANCE,dst=r7,type=java.util.LinkedList>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,DIRECT,extra=[java.util.LinkedList/<init>[], [7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [9, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<MOV,RESULT,dst=r8,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<ARITHMETIC,CHECK-AND-CAST,dst=r8,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getSimSerialNumber[], [8]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<INVOKE,VIRTUAL,extra=[java.util.LinkedList/add[java.lang.Object], [6, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<MOV,CONST,dst=r1,type=java.lang.String,extra="123">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<INVOKE,VIRTUAL,extra=[java.util.LinkedList/add[java.lang.Object], [7, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<MOV,CONST,dst=r3,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<INVOKE,VIRTUAL,extra=[java.util.LinkedList/get[int], [7, 3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<MOV,RESULT,dst=r3,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<ARITHMETIC,CHECK-AND-CAST,dst=r3,type=java.lang.String>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [25]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [26]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [27]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [28]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_ObjectSensitivity2/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.OverwiteValue/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.OverwiteValue/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[13, 14]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [13, 14]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [13, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<NEW,INSTANCE,dst=r10,type=de.ecspride.DataStore>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,DIRECT,extra=[de.ecspride.DataStore/<init>[], [10]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [13, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,RESULT,dst=r12,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<ARITHMETIC,CHECK-AND-CAST,dst=r12,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [12]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<MOV,RESULT,dst=r11,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<MOV,REG,dst=r3,r0=r11,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<INSTANCE,IPUT,r0=r10,r1=r11,type=java.lang.Object,extra=de.ecspride.DataStore.field>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<MOV,CONST,dst=r3,type=java.lang.String,extra="abc">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<MOV,CONST,dst=r1,type=java.lang.String,extra="def">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<INSTANCE,IPUT,r0=r10,r1=r1,type=java.lang.Object,extra=de.ecspride.DataStore.field>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<MOV,CONST,dst=r5,type=java.lang.String,extra="+49">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [25]<INSTANCE,IGET,r0=r10,r1=r7,type=java.lang.Object,extra=de.ecspride.DataStore.field>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [26]<MOV,REG,dst=r4,r0=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [27]<MOV,REG,dst=r6,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [28]<MOV,REG,dst=r8,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [29]<MOV,REG,dst=r9,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [30]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [4, 5, 6, 7, 8, 9]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [31]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_FieldSensitivity1/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.FieldSensitivity1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.FieldSensitivity1/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[1, 2]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [1, 2]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r0,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [1, 0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INSTANCE,IGET,r0=r1,r1=r0,type=java.lang.Object,extra=de.ecspride.FieldSensitivity1.d1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INVOKE,DIRECT,extra=[de.ecspride.FieldSensitivity1/setTaint[de.ecspride.Datacontainer], [1, 0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,DIRECT,extra=[de.ecspride.FieldSensitivity1/sendTaint[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_FieldSensitivity2/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.FieldSensitivity2/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.FieldSensitivity2/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[8, 9]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [8, 9]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [8, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<NEW,INSTANCE,dst=r6,type=de.ecspride.Datacontainer>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,DIRECT,extra=[de.ecspride.Datacontainer/<init>[], [6]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,CONST,dst=r1,type=java.lang.String,extra="abc">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/setDescription[java.lang.String], [6, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [8, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<MOV,RESULT,dst=r7,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<ARITHMETIC,CHECK-AND-CAST,dst=r7,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getSimSerialNumber[], [7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/setSecret[java.lang.String], [6, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/getDescription[], [6]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,RESULT,dst=r3,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_FieldSensitivity3/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.FieldSensitivity3/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.FieldSensitivity3/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[8, 9]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [8, 9]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [8, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<NEW,INSTANCE,dst=r6,type=de.ecspride.Datacontainer>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,DIRECT,extra=[de.ecspride.Datacontainer/<init>[], [6]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,CONST,dst=r1,type=java.lang.String,extra="abc">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/setDescription[java.lang.String], [6, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [8, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<MOV,RESULT,dst=r7,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<ARITHMETIC,CHECK-AND-CAST,dst=r7,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getSimSerialNumber[], [7]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/setSecret[java.lang.String], [6, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<INVOKE,VIRTUAL,extra=[de.ecspride.Datacontainer/getSecret[], [6]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<MOV,RESULT,dst=r3,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [22]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [23]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [24]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/FieldAndObjectSensitivity_FieldSensitivity4/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.FieldSensitivity4/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.FieldSensitivity4/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[9, 10]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<MOV,CONST,dst=r2,type=void,extra=class patdroid.core.PrimitiveInfo?0>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<HALT,SUPER,extra=[null, [9, 10]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [9, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [9, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<MOV,RESULT,dst=r8,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<ARITHMETIC,CHECK-AND-CAST,dst=r8,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [8]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<MOV,RESULT,dst=r7,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<NEW,INSTANCE,dst=r6,type=de.ecspride.FieldSensitivity4$Datacontainer>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<INVOKE,DIRECT,extra=[de.ecspride.FieldSensitivity4$Datacontainer/<init>[de.ecspride.FieldSensitivity4], [6, 9]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<INVOKE,STATIC,extra=[android.telephony.SmsManager/getDefault[], []]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [14]<MOV,RESULT,dst=r0,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [15]<MOV,CONST,dst=r1,type=java.lang.String,extra="+49 1234">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [16]<INSTANCE,IGET,r0=r6,r1=r3,type=java.lang.Object,extra=de.ecspride.FieldSensitivity4$Datacontainer.value>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [17]<MOV,REG,dst=r4,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [18]<MOV,REG,dst=r5,r0=r2,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [19]<INVOKE,VIRTUAL,extra=[android.telephony.SmsManager/sendTextMessage[java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent], [0, 1, 2, 3, 4, 5]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [20]<INSTANCE,IPUT,r0=r6,r1=r7,type=java.lang.Object,extra=de.ecspride.FieldSensitivity4$Datacontainer.value>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [21]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,long)>, <android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>, <android.content.SharedPreferences: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>, <android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>]
class fu.hao.trust.dvm.DalvikVM - [MSG]: Begin run onCreate at C:/Users/hao/workspace/DroidBenchProj/GeneralJava_StaticInitialization1/app/app-release.apk
class fu.hao.trust.dvm.DalvikVM - [MSG]: RUN Method de.ecspride.MainActivity/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: New method call: de.ecspride.MainActivity/onCreate[android.os.Bundle]
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [0]<SPECIAL,ARGUMENT_SET,extra=[2, 3]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [1]<HALT,SUPER,extra=[null, [2, 3]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [2]<MOV,CONST,dst=r1,type=void,extra=class patdroid.core.PrimitiveInfo?2130903040>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [3]<INVOKE,VIRTUAL,extra=[android.app.Activity/setContentView[int], [2, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [4]<MOV,CONST,dst=r1,type=java.lang.String,extra="phone">
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [5]<INVOKE,VIRTUAL,extra=[android.app.Activity/getSystemService[java.lang.String], [2, 1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [6]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [7]<ARITHMETIC,CHECK-AND-CAST,dst=r1,type=android.telephony.TelephonyManager>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [8]<INVOKE,VIRTUAL,extra=[android.telephony.TelephonyManager/getDeviceId[], [1]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [9]<MOV,RESULT,dst=r1,type=java.lang.Object>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [10]<STATIC,SPUT,r0=r1,type=java.lang.Object,extra=(de.ecspride.MainActivity, im)>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [11]<NEW,INSTANCE,dst=r0,type=de.ecspride.MainActivity$StaticInitClass1>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [12]<INVOKE,DIRECT,extra=[de.ecspride.MainActivity$StaticInitClass1/<init>[], [0]]>
class fu.hao.trust.dvm.DalvikVM - [DEBUG]: [13]<RETURN,VOID>
class fu.hao.trust.analysis.Taint - [DEBUG]: srcs: [<android.os.Bundle: java.lang.ClassLoader getClassLoader()>, <android.os.Bundle: byte getByte(java.lang.String)>, <android.os.Bundle: short[] getShortArray(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.database.Cursor: java.lang.String getString(int)>, <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>, <android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>, <android.os.Bundle: long[] getLongArray(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>, <android.media.AudioRecord: int read(short[],int,int)>, <android.os.Bundle: double getDouble(java.lang.String,double)>, <java.util.Locale: java.lang.String getCountry()>, <android.app.Activity: android.content.Intent getIntent()>, <android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String key)>, <android.net.Uri: android.net.Uri parse(java.lang.String)>, <android.media.AudioRecord: int read(byte[],int,int)>, <android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>, <android.os.Bundle: byte[] getByteArray(java.lang.String)>, <android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>, <android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>, <android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>, <android.os.Bundle: int getInt(java.lang.String)>, <android.os.Bundle: float[] getFloatArray(java.lang.String)>, <android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>, <android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>, <android.os.Bundle: java.lang.String getString(java.lang.String)>, <java.util.Calendar: java.util.TimeZone getTimeZone()>, <android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>, <android.location.Location: double getLongitude()>, <android.os.Bundle: char getChar(java.lang.String)>, <android.os.Bundle: int[] getIntArray(java.lang.String)>, <android.os.Bundle: float getFloat(java.lang.String,float)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>, <org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>, <android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>, <org.apache.http.util.EntityUtils: byte[] toByteArray(org.apache.http.HttpEntity)>, <android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>, <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>, <java.net.URLConnection: java.io.InputStream getInputStream()>, <android.os.Bundle: double[] getDoubleArray(java.lang.String)>, <android.os.Bundle: char[] getCharArray(java.lang.String)>, <com.example.testflowdroid.SourceAndSink: java.lang.String source(com.example.testflowdroid.MyObject)>, <android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>, <android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>, <android.os.Bundle: char getChar(java.lang.String,char)>, <android.telephony.TelephonyManager: java.lang.String getSubscriberId()>, <android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>, <android.os.Handler: android.os.Message obtainMessage(int,int,int)>, <android.os.Bundle: long getLong(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage(int)>, <android.os.Bundle: java.lang.Object get(java.lang.String)>, <android.location.Location: double getLatitude()>, <android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>, <android.telephony.TelephonyManager: java.lang.String getDeviceId()>, <android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>, <java.net.URLConnection: java.io.OutputStream getOutputStream()>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>, <android.os.Bundle: int getInt(java.lang.String,int)>, <android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>, <android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>, <android.os.Handler: android.os.Message obtainMessage()>, <android.telephony.TelephonyManager: java.lang.String getLine1Number()>, <android.os.Bundle: boolean getBoolean(java.lang.String)>, <android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>, <android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>, <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>, <android.os.Bundle: float getFloat(java.lang.String)>, <android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>, <android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>, <android.database.sqlite.SQLiteDatabase: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String)>, <android.os.Bundle: short getShort(java.lang.String,short)>, <android.os.Bundle: double getDouble(java.lang.String)>, <java.net.URL: java.net.URLConnection openConnection()>, <android.os.Bundle: long getLong(java.lang.String,lon